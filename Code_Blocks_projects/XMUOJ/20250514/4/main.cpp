/*
源石谜板解锁

描述

在罗德岛的作战演习中，博士需要操控一块 2×3 的“源石控制板”。板上包含编号为 1~5 的模块，以及一个编号为 0 的空位。一次操作是将空位与其相邻的模块（上下左右之一）交换位置。

你的目标是将初始状态的板调整成目标状态[[1,2,3],[4,5,0]]，即所有模块有序排列，空位在最后。

请你编写一个程序，返回最少需要多少步操作才能完成该目标。如果无法完成，则返回-1。

输入

一个 2×3 的二维列表board，表示初始谜板状态。

输出

一个整数，表示最少所需的移动次数；若无法解开谜板，返回-1。

QQ截图20250512180703.png (./57209e6e3a.png)

输入样例 1

[[1,2,3],[4,0,5]]

输出样例 1

1

来源

xmu

温馨提示

实在搞不定的话，你可以 点此下载测试数据 (./problem_5364_test_cases.zip)
*/

#include <iostream>

using namespace std;

int main()
{
    cout << "Hello world!" << endl;
    return 0;
}
