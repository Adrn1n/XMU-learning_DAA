/*
旅游计划

描述

Z王国有若干个城市,每两个城市之间都有一条道路.

由于Z王国的特殊政策,每个城市只允许游客访问一次.

假设城市从0开始编号,请你帮助小H规划一条最短的旅行路线,使得小H从0到n-1不重不漏地访问每个城市

输入

第一行是一个整数n(1<=n<=8),表示城市的个数

接下来是一个n*n的对称矩阵,元素dis[i,j]表示i城市与j城市间道路的长度(1<=dis[i,j]<=10000,dis[i,i]=0,dis[i,j]=dis[j,i])

输出

输出最短的距离

输入样例 1

5
0 2 4 5 1
2 0 6 5 3
4 6 0 8 3
5 5 8 0 5
1 3 3 5 0

输出样例 1

18

来源

xmu

温馨提示

实在搞不定的话，你可以 点此下载测试数据 (./problem_5404_test_cases.zip)
*/

#include <iostream>

using namespace std;

int main()
{
    cout << "Hello world!" << endl;
    return 0;
}
